/*
 * @version   : 4.8.2 - Ext.NET License
 * @author    : Object.NET, Inc. https://object.net/
 * @date      : 2019-06-10
 * @copyright : Copyright (c) 2008-2019, Object.NET, Inc. (https://object.net/). All rights reserved.
 * @license   : See license.txt and https://ext.net/license/
 */


Ext.define('Ext.ux.BoxReorderer',{extend:'Ext.plugin.Abstract',alias:'plugin.boxreorderer',requires:['Ext.dd.DD'],mixins:{observable:'Ext.util.Observable'},itemSelector:'.x-box-item',animate:100,constructor:function(){this.callParent(arguments);this.mixins.observable.constructor.call(this);},init:function(container){var me=this,layout=container.getLayout();me.container=container;me.names=layout._props[layout.type].names;me.animatePolicy={};me.animatePolicy[me.names.x]=true;me.container.on({scope:me,boxready:me.onBoxReady,beforedestroy:me.onContainerDestroy});},onContainerDestroy:function(){var dd=this.dd;if(dd){dd.unreg();this.dd=null;}},onBoxReady:function(){var me=this,layout=me.container.getLayout(),names=me.names,dd;dd=me.dd=new Ext.dd.DD(layout.innerCt,me.container.id+'-reorderer');Ext.apply(dd,{animate:me.animate,reorderer:me,container:me.container,getDragCmp:me.getDragCmp,clickValidator:Ext.Function.createInterceptor(dd.clickValidator,me.clickValidator,me,false),onMouseDown:me.onMouseDown,startDrag:me.startDrag,onDrag:me.onDrag,endDrag:me.endDrag,getNewIndex:me.getNewIndex,doSwap:me.doSwap,findReorderable:me.findReorderable,names:names});dd.dim=names.width;dd.startAttr=names.beforeX;dd.endAttr=names.afterX;},getDragCmp:function(e){return this.container.getChildByElement(e.getTarget(this.itemSelector,10));},clickValidator:function(e){var cmp=this.getDragCmp(e);return!!(cmp&&cmp.reorderable!==false);},onMouseDown:function(e){var me=this,container=me.container,containerBox,cmpEl,cmpBox;me.dragCmp=me.getDragCmp(e);if(me.dragCmp){cmpEl=me.dragCmp.getEl();me.startIndex=me.curIndex=container.items.indexOf(me.dragCmp);cmpBox=cmpEl.getBox();me.lastPos=cmpBox[me.startAttr];containerBox=container.el.getBox();if(me.dim==='width'){me.minX=containerBox.left;me.maxX=containerBox.right-cmpBox.width;me.minY=me.maxY=cmpBox.top;me.deltaX=e.getX()-cmpBox.left;}
else{me.minY=containerBox.top;me.maxY=containerBox.bottom-cmpBox.height;me.minX=me.maxX=cmpBox.left;me.deltaY=e.getY()-cmpBox.top;}
me.constrainY=me.constrainX=true;}},startDrag:function(){var me=this,dragCmp=me.dragCmp;if(dragCmp){dragCmp.setPosition=Ext.emptyFn;dragCmp.animate=false;if(me.animate){me.container.getLayout().animatePolicy=me.reorderer.animatePolicy;}
me.dragElId=dragCmp.getEl().id;me.reorderer.fireEvent('StartDrag',me,me.container,dragCmp,me.curIndex);dragCmp.suspendEvents();dragCmp.disabled=true;dragCmp.el.setStyle('zIndex',100);}
else{me.dragElId=null;}},findReorderable:function(newIndex){var me=this,items=me.container.items,newItem;if(items.getAt(newIndex).reorderable===false){newItem=items.getAt(newIndex);if(newIndex>me.startIndex){while(newItem&&newItem.reorderable===false){newIndex++;newItem=items.getAt(newIndex);}}
else{while(newItem&&newItem.reorderable===false){newIndex--;newItem=items.getAt(newIndex);}}}
newIndex=Math.min(Math.max(newIndex,0),items.getCount()-1);if(items.getAt(newIndex).reorderable===false){return-1;}
return newIndex;},doSwap:function(newIndex){var me=this,items=me.container.items,container=me.container,orig,dest,tmpIndex;newIndex=me.findReorderable(newIndex);if(newIndex===-1||newIndex===me.curIndex){return;}
me.reorderer.fireEvent('ChangeIndex',me,container,me.dragCmp,me.startIndex,newIndex);orig=items.getAt(me.curIndex);dest=items.getAt(newIndex);items.remove(orig);tmpIndex=Math.min(Math.max(newIndex,0),items.getCount()-1);items.insert(tmpIndex,orig);items.remove(dest);items.insert(me.curIndex,dest);container.updateLayout({isRoot:true});me.curIndex=newIndex;},onDrag:function(e){var me=this,newIndex;newIndex=me.getNewIndex(e.getPoint());if((newIndex!==undefined)){me.reorderer.fireEvent('Drag',me,me.container,me.dragCmp,me.startIndex,me.curIndex);me.doSwap(newIndex);}},endDrag:function(e){var me=this,layout=me.container.getLayout(),temp;if(e){e.stopEvent();}
if(me.dragCmp){delete me.dragElId;delete me.dragCmp.setPosition;me.dragCmp.animate=true;me.dragCmp.lastBox[me.names.x]=me.dragCmp.getPosition(true)[me.names.widthIndex];me.container.updateLayout({isRoot:true});temp=Ext.fx.Manager.getFxQueue(me.dragCmp.el.id)[0];if(temp){temp.on({afteranimate:me.reorderer.afterBoxReflow,scope:me});}
else{Ext.asap(me.reorderer.afterBoxReflow,me);}
if(me.animate){delete layout.animatePolicy;}
me.reorderer.fireEvent('drop',me,me.container,me.dragCmp,me.startIndex,me.curIndex);}},afterBoxReflow:function(){var me=this;me.dragCmp.el.setStyle('zIndex','');me.dragCmp.disabled=false;me.dragCmp.resumeEvents();},getNewIndex:function(pointerPos){var me=this,dragEl=me.getDragEl(),dragBox=Ext.fly(dragEl).getBox(),targetEl,targetBox,targetMidpoint,i=0,it=me.container.items.items,ln=it.length,lastPos=me.lastPos,newIndex=-1;me.lastPos=dragBox[me.startAttr];for(;i<ln;i++){targetEl=it[i].getEl();if(targetEl.dom!==dragEl&&targetEl.is(me.reorderer.itemSelector)){targetBox=targetEl.getBox();targetMidpoint=targetBox[me.startAttr]+(targetBox[me.dim]>>1);if(i<me.curIndex){if((dragBox[me.startAttr]<lastPos)&&(dragBox[me.startAttr]<(targetMidpoint-5))){newIndex=i;}}
else if(i>me.curIndex){if((dragBox[me.startAttr]>lastPos)&&(dragBox[me.endAttr]>(targetMidpoint+5))){newIndex=i;}}}}
if(newIndex>=0){return newIndex;}}});
