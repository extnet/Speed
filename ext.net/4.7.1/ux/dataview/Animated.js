
Ext.define('Ext.ux.DataView.Animated',{alias:'plugin.ux-animated-dataview',defaults:{duration:750,idProperty:'id'},constructor:function(config){Ext.apply(this,config||{},this.defaults);},init:function(dataview){var me=this,store=dataview.store,items=dataview.all,task={interval:20},duration=me.duration;me.dataview=dataview;dataview.blockRefresh=true;dataview.updateIndexes=Ext.Function.createSequence(dataview.updateIndexes,function(){this.getTargetEl().select(this.itemSelector).each(function(element,composite,index){element.dom.id=Ext.util.Format.format("{0}-{1}",dataview.id,store.getAt(index).internalId);},this);},dataview);me.dataviewID=dataview.id;me.cachedStoreData={};me.cacheStoreData(store.data||store.snapshot);dataview.on('resize',function(){var store=dataview.store;if(store.getCount()>0){}},this);dataview.store.on({datachanged:reDraw,scope:this,buffer:50});function reDraw(){var parentEl=dataview.getTargetEl(),parentElY=parentEl.getY(),parentElPaddingTop=parentEl.getPadding('t'),added=me.getAdded(store),removed=me.getRemoved(store),remaining=me.getRemaining(store),itemArray,i,id,itemFly=new Ext.dom.Fly(),rtl=me.dataview.getInherited().rtl,oldPos,newPos,styleSide=rtl?'right':'left',newStyle={};if(!parentEl){return;}
Ext.iterate(removed,function(recId,item){id=me.dataviewID+'-'+recId;Ext.fx.Manager.stopAnimation(id);item.dom=Ext.getDom(id);if(!item.dom){delete removed[recId];}});me.cacheStoreData(store);var oldPositions={},newPositions={};Ext.iterate(remaining,function(id,item){if(itemFly.attach(Ext.getDom(me.dataviewID+'-'+id))){oldPos=oldPositions[id]={top:itemFly.getY()-parentElY-itemFly.getMargin('t')-parentElPaddingTop};oldPos[styleSide]=me.getItemX(itemFly);}else{delete remaining[id];}});dataview.refresh();Ext.iterate(removed,function(id,item){parentEl.dom.appendChild(item.dom);itemFly.attach(item.dom).animate({duration:duration,opacity:0,callback:function(anim){var el=Ext.get(anim.target.id);if(el){el.destroy();}}});delete item.dom;});if(!store.getCount()){return;}
itemArray=items.slice();for(i=itemArray.length-1;i>=0;i--){id=store.getAt(i).internalId;itemFly.attach(itemArray[i]);newPositions[id]={dom:itemFly.dom,top:itemFly.getY()-parentElY-itemFly.getMargin('t')-parentElPaddingTop};newPositions[id][styleSide]=me.getItemX(itemFly);newPos=oldPositions[id]||newPositions[id];newStyle.position='absolute';newStyle.top=newPos.top+"px";newStyle[styleSide]=newPos.left+"px";itemFly.applyStyles(newStyle);}
var doAnimate=function(){var elapsed=new Date()-task.taskStartTime,fraction=elapsed/duration;if(fraction>=1){newStyle.position=newStyle.top=newStyle[styleSide]='';for(id in newPositions){itemFly.attach(newPositions[id].dom).applyStyles(newStyle);}
Ext.TaskManager.stop(task);}else{for(id in remaining){var oldPos=oldPositions[id],newPos=newPositions[id],oldTop=oldPos.top,newTop=newPos.top,oldLeft=oldPos[styleSide],newLeft=newPos[styleSide],diffTop=fraction*Math.abs(oldTop-newTop),diffLeft=fraction*Math.abs(oldLeft-newLeft),midTop=oldTop>newTop?oldTop-diffTop:oldTop+diffTop,midLeft=oldLeft>newLeft?oldLeft-diffLeft:oldLeft+diffLeft;newStyle.top=midTop+"px";newStyle[styleSide]=midLeft+"px";itemFly.attach(newPos.dom).applyStyles(newStyle);}}};Ext.iterate(added,function(id,item){if(itemFly.attach(Ext.getDom(me.dataviewID+'-'+id))){itemFly.setOpacity(0);itemFly.animate({duration:duration,opacity:1});}});Ext.TaskManager.stop(task);task.run=doAnimate;Ext.TaskManager.start(task);me.cacheStoreData(store);}},getItemX:function(el){var rtl=this.dataview.getInherited().rtl,parentEl=el.up('');if(rtl){return parentEl.getViewRegion().right-el.getRegion().right+el.getMargin('r');}else{return el.getX()-parentEl.getX()-el.getMargin('l')-parentEl.getPadding('l');}},cacheStoreData:function(store){var cachedStoreData=this.cachedStoreData={};store.each(function(record){cachedStoreData[record.internalId]=record;});},getExisting:function(){return this.cachedStoreData;},getExistingCount:function(){var count=0,items=this.getExisting();for(var k in items){count++;}
return count;},getAdded:function(store){var cachedStoreData=this.cachedStoreData,added={};store.each(function(record){if(cachedStoreData[record.internalId]==null){added[record.internalId]=record;}});return added;},getRemoved:function(store){var cachedStoreData=this.cachedStoreData,removed={},id;for(id in cachedStoreData){if(store.findBy(function(record){return record.internalId==id;})==-1){removed[id]=cachedStoreData[id];}}
return removed;},getRemaining:function(store){var cachedStoreData=this.cachedStoreData,remaining={};store.each(function(record){if(cachedStoreData[record.internalId]!=null){remaining[record.internalId]=record;}});return remaining;}});
